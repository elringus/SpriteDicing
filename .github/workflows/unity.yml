name: test unity plugin

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:

  cover:
    name: test and cover
    runs-on: ubuntu-latest
    strategy:
      matrix:
        projectPath:
          - plugins/unity
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/cache@v4
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Run tests and generate coverage report
        uses: game-ci/unity-test-runner@v4
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          testMode: editmode
          coverageOptions: useProjectSettings;generateAdditionalMetrics
          customParameters: -debugCodeOptimization -enableCodeCoverage

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ${{ steps.tests.outputs.coveragePath }}/**/*.xml
          fail_ci_if_error: true
